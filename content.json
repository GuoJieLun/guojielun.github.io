{"pages":[{"title":"分类","date":"2018-02-07T07:22:03.000Z","updated":"2018-02-07T06:30:19.000Z","comments":false,"path":"categories/index.html","permalink":"http://blog.guojielun.com/categories/index.html","excerpt":"","text":""},{"title":"书单","date":"2018-02-07T06:34:08.000Z","updated":"2018-02-07T06:30:19.000Z","comments":false,"path":"books/index.html","permalink":"http://blog.guojielun.com/books/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2018-02-07T06:34:08.000Z","updated":"2018-02-07T06:30:19.000Z","comments":false,"path":"repository/index.html","permalink":"http://blog.guojielun.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-02-07T07:22:18.000Z","updated":"2018-02-07T06:30:19.000Z","comments":false,"path":"tags/index.html","permalink":"http://blog.guojielun.com/tags/index.html","excerpt":"","text":""},{"title":"关于","date":"2018-02-07T08:51:27.000Z","updated":"2018-02-07T08:51:27.000Z","comments":false,"path":"about/index.html","permalink":"http://blog.guojielun.com/about/index.html","excerpt":"","text":"&#123; name: 'Jay' gender: '男', profession: 'Web Developer', address: '广东广州', github: 'https://github.com/GuoJieLun', email: '522425760@qq.com', description: '致力于网站建设与前端用户体验设计', skills: [ ['Html', 'Javascript', 'jQuery', 'CSS', 'ES6', 'Node'], ['Webpack'], ['Less','Sass'], ['Git', 'SVN'], ['Vue','React','Weex'], ], devTools: [ ['Sublime Text', 'Visual Studio Code', 'WebStorm'], ['Chrome DevTools', 'Fiddler'], ['SourceTree'] ]&#125;"}],"posts":[{"title":"node+express+七牛上传","slug":"node-express-七牛上传","date":"2018-02-11T09:00:49.000Z","updated":"2018-02-11T09:01:07.000Z","comments":true,"path":"2018/02/11/node-express-七牛上传/","link":"","permalink":"http://blog.guojielun.com/2018/02/11/node-express-七牛上传/","excerpt":"","text":"DEMO传送门demo里面已经加了解释说明了。获取demohttps://github.com/GuoJieLun/qiniuUpload.git安装依赖npm install启动服务node index注意事项先在 upload.js配置好自己的七牛的信息,再打开 localhost:8234 \b测试上传","categories":[],"tags":[]},{"title":"node里面使用import、export、async、await","slug":"node里面使用import和export","date":"2018-02-11T03:28:39.000Z","updated":"2018-02-11T08:22:19.000Z","comments":true,"path":"2018/02/11/node里面使用import和export/","link":"","permalink":"http://blog.guojielun.com/2018/02/11/node里面使用import和export/","excerpt":"","text":"demo传送门安装依赖把这些依赖加入package.json 的 dependencies里面\"babel-core\": \"^6.22.1\",\"babel-loader\": \"^7.1.1\",\"babel-plugin-transform-runtime\": \"^6.22.0\",\"babel-polyfill\": \"^6.26.0\",\"babel-preset-env\": \"^1.3.2\",\"babel-preset-es2015\": \"^6.24.1\",\"babel-preset-stage-0\": \"^6.24.1\",\"babel-preset-stage-2\": \"^6.22.0\",\"babel-register\": \"^6.22.0\",配置.babelrc如果没有此 .babelrc 文件，请创建一个,然后加入此代码&#123; \"presets\": [ [\"env\",&#123;\"modules\": false&#125;], \"es2015\", \"stage-2\" ], \"plugins\": [\"transform-runtime\"], \"comments\": false, \"env\": &#123; \"test\": &#123; \"presets\": [\"env\", \"stage-2\"], \"plugins\": [ \"istanbul\" ] &#125; &#125;&#125;配置文件在server文件里的index.js，放入代码，require(\"babel-core/register\");require(\"./app.js\"); //app.js 是正式启动的express服务的代码require(\"babel-core\").transform(\"code\", &#123; plugins: [\"transform-runtime\"]&#125;);配置完毕,启动服务node index 或 supervisor index(如果安装了supervisor)这样就可以愉快的使用 ES6语法了","categories":[],"tags":[]},{"title":"解决 can't set headers after they are sent","slug":"解决-can-t-set-headers-after-they-are-sent","date":"2018-02-08T11:44:36.000Z","updated":"2018-02-11T03:37:21.000Z","comments":true,"path":"2018/02/08/解决-can-t-set-headers-after-they-are-sent/","link":"","permalink":"http://blog.guojielun.com/2018/02/08/解决-can-t-set-headers-after-they-are-sent/","excerpt":"","text":"今天用node测试的 async/await 的接口的时候，发现同一界面,同时发出多个请求的时候会报错can't set headers after they are sent然后上网查找资料都是说是没有设置 res.end() 或者 return res.json, 按照网上的方法来设置之后还是没办法解决,后来发现在一个资料里面说是这段代码也会引起报错。app.use(require('express-formidable')(&#123; // uploadDir: path.join(__dirname, 'public/images'), // 上传文件目录 keepExtensions: true// 保留后缀&#125;));我注释的这段代码时候，请求不会报错了。但是我还需要用到这个中间件。最后的解决办法是要初始化 express-formidable,代码如下:const formidable = require('formidable');app.use(function (req, res, next) &#123; var form = new formidable.IncomingForm(&#123; encoding: 'utf-8', // uploadDir: path.join(__dirname, '/Upload'), multiples: true, keepExtensions: true &#125;) form.once('error', console.log) form.parse(req, function (err, fields, files) &#123; Object.assign(req, &#123;fields, files&#125;); next(); &#125;)总结原因可能是直接app.use后 express-formidable,当我的接口是异步的时候会导致请求阻塞无法及时的 next() 从而导致报错。所有需要 express-formidable的中间件里面监听到数据合并之后需要 next() 这样async/await就可以执行下去了","categories":[],"tags":[]},{"title":"weex环境配置","slug":"WEEX环境配置","date":"2018-02-07T02:37:55.000Z","updated":"2018-02-09T01:53:35.000Z","comments":true,"path":"2018/02/07/WEEX环境配置/","link":"","permalink":"http://blog.guojielun.com/2018/02/07/WEEX环境配置/","excerpt":"","text":"配置开发环境安装weex脚手架npm install -g weex-toolkit升级weex版本(不是必须)weex update weex-devtool@latest下载依赖cd &#39;项目名称&#39;npm install 或 cnpm install (‘前提是已安装淘宝镜像’)启动服务npm run serve配置ios环境集成参考网站参考1参考2weex添加ios模块weex platform add ios安装gem和cocoapods参考安装依赖cd platforms/ios/pod install&amp;nbsp回到项目根目录,启动服务weex run ios配置weex-uiweex-ui安装weex-uinpm install weex-ui —save安装相关依赖插件npm i babel-preset-stage-0 babel-plugin-component -D配置.babelrc &#123; \"presets\": [\"es2015\", \"stage-0\"], \"plugins\": [ [ \"component\", &#123; \"libraryName\": \"weex-ui\", \"libDir\": \"packages\" &#125; ] ]&#125;配置完毕,重启服务","categories":[],"tags":[]}]}